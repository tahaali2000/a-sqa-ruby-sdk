# spotify_web_api_with_fixes_and_improvements_from_sonallux
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module SpotifyWebApiWithFixesAndImprovementsFromSonallux
  # CategoriesController
  class CategoriesController < BaseController
    # Get a list of categories used to tag items in Spotify (on, for example,
    # the Spotify player’s “Browse” tab).
    # @param [String] locale Optional parameter: Example:
    # @param [Integer] limit Optional parameter: Example:20
    # @param [Integer] offset Optional parameter: Example:0
    # @return [PagedCategories] response from the API call.
    def get_categories(locale: nil,
                       limit: 20,
                       offset: 0)
      new_api_call_builder
        .request(new_request_builder(HttpMethodEnum::GET,
                                     '/browse/categories',
                                     Server::DEFAULT)
                   .query_param(new_parameter(locale, key: 'locale'))
                   .query_param(new_parameter(limit, key: 'limit'))
                   .query_param(new_parameter(offset, key: 'offset'))
                   .header_param(new_parameter('application/json', key: 'accept'))
                   .auth(Single.new('oauth_2_0')))
        .response(new_response_handler
                    .deserializer(APIHelper.method(:custom_type_deserializer))
                    .deserialize_into(PagedCategories.method(:from_hash))
                    .local_error('401',
                                 "Bad or expired token. This can happen if the user revoked a'\
                                  ' token or\nthe access token has expired. You should'\
                                  ' re-authenticate the user.\n",
                                 UnauthorizedException)
                    .local_error('403',
                                 "Bad OAuth request (wrong consumer key, bad nonce, expired'\
                                  '\ntimestamp...). Unfortunately, re-authenticating the user'\
                                  ' won't help here.\n",
                                 ForbiddenException)
                    .local_error('429',
                                 "The app has exceeded its rate limits.\n",
                                 TooManyRequestsException))
        .execute
    end

    # Get a single category used to tag items in Spotify (on, for example, the
    # Spotify player’s “Browse” tab).
    # @param [String] category_id Required parameter: Example:
    # @param [String] locale Optional parameter: Example:
    # @return [CategoryObject] response from the API call.
    def get_a_category(category_id,
                       locale: nil)
      new_api_call_builder
        .request(new_request_builder(HttpMethodEnum::GET,
                                     '/browse/categories/{category_id}',
                                     Server::DEFAULT)
                   .template_param(new_parameter(category_id, key: 'category_id')
                                    .should_encode(true))
                   .query_param(new_parameter(locale, key: 'locale'))
                   .header_param(new_parameter('application/json', key: 'accept'))
                   .auth(Single.new('oauth_2_0')))
        .response(new_response_handler
                    .deserializer(APIHelper.method(:custom_type_deserializer))
                    .deserialize_into(CategoryObject.method(:from_hash))
                    .local_error('401',
                                 "Bad or expired token. This can happen if the user revoked a'\
                                  ' token or\nthe access token has expired. You should'\
                                  ' re-authenticate the user.\n",
                                 UnauthorizedException)
                    .local_error('403',
                                 "Bad OAuth request (wrong consumer key, bad nonce, expired'\
                                  '\ntimestamp...). Unfortunately, re-authenticating the user'\
                                  ' won't help here.\n",
                                 ForbiddenException)
                    .local_error('429',
                                 "The app has exceeded its rate limits.\n",
                                 TooManyRequestsException))
        .execute
    end
  end
end
