# spotify_web_api_with_fixes_and_improvements_from_sonallux
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module SpotifyWebApiWithFixesAndImprovementsFromSonallux
  # PlaylistsController
  class PlaylistsController < BaseController
    # Get a playlist owned by a Spotify user.
    # @param [String] playlist_id Required parameter: Example:
    # @param [String] market Optional parameter: Example:
    # @param [String] fields Optional parameter: Example:
    # @param [String] additional_types Optional parameter: Example:
    # @return [PlaylistObject] response from the API call.
    def get_playlist(playlist_id,
                     market: nil,
                     fields: nil,
                     additional_types: nil)
      new_api_call_builder
        .request(new_request_builder(HttpMethodEnum::GET,
                                     '/playlists/{playlist_id}',
                                     Server::DEFAULT)
                   .template_param(new_parameter(playlist_id, key: 'playlist_id')
                                    .should_encode(true))
                   .query_param(new_parameter(market, key: 'market'))
                   .query_param(new_parameter(fields, key: 'fields'))
                   .query_param(new_parameter(additional_types, key: 'additional_types'))
                   .header_param(new_parameter('application/json', key: 'accept'))
                   .auth(Single.new('oauth_2_0')))
        .response(new_response_handler
                    .deserializer(APIHelper.method(:custom_type_deserializer))
                    .deserialize_into(PlaylistObject.method(:from_hash))
                    .local_error('401',
                                 "Bad or expired token. This can happen if the user revoked a'\
                                  ' token or\nthe access token has expired. You should'\
                                  ' re-authenticate the user.\n",
                                 UnauthorizedException)
                    .local_error('403',
                                 "Bad OAuth request (wrong consumer key, bad nonce, expired'\
                                  '\ntimestamp...). Unfortunately, re-authenticating the user'\
                                  ' won't help here.\n",
                                 ForbiddenException)
                    .local_error('429',
                                 "The app has exceeded its rate limits.\n",
                                 TooManyRequestsException))
        .execute
    end

    # Change a playlist's name and public/private state. (The user must, of
    # course, own the playlist.)
    # @param [String] playlist_id Required parameter: Example:
    # @param [PlaylistsRequest] body Optional parameter: Example:
    # @return [void] response from the API call.
    def change_playlist_details(playlist_id,
                                body: nil)
      new_api_call_builder
        .request(new_request_builder(HttpMethodEnum::PUT,
                                     '/playlists/{playlist_id}',
                                     Server::DEFAULT)
                   .template_param(new_parameter(playlist_id, key: 'playlist_id')
                                    .should_encode(true))
                   .header_param(new_parameter('application/json', key: 'Content-Type'))
                   .body_param(new_parameter(body))
                   .body_serializer(proc do |param| param.to_json unless param.nil? end)
                   .auth(Single.new('oauth_2_0')))
        .response(new_response_handler
                    .is_response_void(true)
                    .local_error('401',
                                 "Bad or expired token. This can happen if the user revoked a'\
                                  ' token or\nthe access token has expired. You should'\
                                  ' re-authenticate the user.\n",
                                 UnauthorizedException)
                    .local_error('403',
                                 "Bad OAuth request (wrong consumer key, bad nonce, expired'\
                                  '\ntimestamp...). Unfortunately, re-authenticating the user'\
                                  ' won't help here.\n",
                                 ForbiddenException)
                    .local_error('429',
                                 "The app has exceeded its rate limits.\n",
                                 TooManyRequestsException))
        .execute
    end

    # Get full details of the items of a playlist owned by a Spotify user.
    # @param [String] playlist_id Required parameter: Example:
    # @param [String] market Optional parameter: Example:
    # @param [String] fields Optional parameter: Example:
    # @param [Integer] limit Optional parameter: Example:20
    # @param [Integer] offset Optional parameter: Example:0
    # @param [String] additional_types Optional parameter: Example:
    # @return [PagingPlaylistTrackObject] response from the API call.
    def get_playlists_tracks(playlist_id,
                             market: nil,
                             fields: nil,
                             limit: 20,
                             offset: 0,
                             additional_types: nil)
      new_api_call_builder
        .request(new_request_builder(HttpMethodEnum::GET,
                                     '/playlists/{playlist_id}/tracks',
                                     Server::DEFAULT)
                   .template_param(new_parameter(playlist_id, key: 'playlist_id')
                                    .should_encode(true))
                   .query_param(new_parameter(market, key: 'market'))
                   .query_param(new_parameter(fields, key: 'fields'))
                   .query_param(new_parameter(limit, key: 'limit'))
                   .query_param(new_parameter(offset, key: 'offset'))
                   .query_param(new_parameter(additional_types, key: 'additional_types'))
                   .header_param(new_parameter('application/json', key: 'accept'))
                   .auth(Single.new('oauth_2_0')))
        .response(new_response_handler
                    .deserializer(APIHelper.method(:custom_type_deserializer))
                    .deserialize_into(PagingPlaylistTrackObject.method(:from_hash))
                    .local_error('401',
                                 "Bad or expired token. This can happen if the user revoked a'\
                                  ' token or\nthe access token has expired. You should'\
                                  ' re-authenticate the user.\n",
                                 UnauthorizedException)
                    .local_error('403',
                                 "Bad OAuth request (wrong consumer key, bad nonce, expired'\
                                  '\ntimestamp...). Unfortunately, re-authenticating the user'\
                                  ' won't help here.\n",
                                 ForbiddenException)
                    .local_error('429',
                                 "The app has exceeded its rate limits.\n",
                                 TooManyRequestsException))
        .execute
    end

    # Add one or more items to a user's playlist.
    # @param [String] playlist_id Required parameter: Example:
    # @param [Integer] position Optional parameter: Example:
    # @param [String] uris Optional parameter: Example:
    # @param [PlaylistsTracksRequest] body Optional parameter: Example:
    # @return [PlaylistSnapshotId] response from the API call.
    def add_tracks_to_playlist(playlist_id,
                               position: nil,
                               uris: nil,
                               body: nil)
      new_api_call_builder
        .request(new_request_builder(HttpMethodEnum::POST,
                                     '/playlists/{playlist_id}/tracks',
                                     Server::DEFAULT)
                   .template_param(new_parameter(playlist_id, key: 'playlist_id')
                                    .should_encode(true))
                   .header_param(new_parameter('application/json', key: 'Content-Type'))
                   .query_param(new_parameter(position, key: 'position'))
                   .query_param(new_parameter(uris, key: 'uris'))
                   .body_param(new_parameter(body))
                   .header_param(new_parameter('application/json', key: 'accept'))
                   .body_serializer(proc do |param| param.to_json unless param.nil? end)
                   .auth(Single.new('oauth_2_0')))
        .response(new_response_handler
                    .deserializer(APIHelper.method(:custom_type_deserializer))
                    .deserialize_into(PlaylistSnapshotId.method(:from_hash))
                    .local_error('401',
                                 "Bad or expired token. This can happen if the user revoked a'\
                                  ' token or\nthe access token has expired. You should'\
                                  ' re-authenticate the user.\n",
                                 UnauthorizedException)
                    .local_error('403',
                                 "Bad OAuth request (wrong consumer key, bad nonce, expired'\
                                  '\ntimestamp...). Unfortunately, re-authenticating the user'\
                                  ' won't help here.\n",
                                 ForbiddenException)
                    .local_error('429',
                                 "The app has exceeded its rate limits.\n",
                                 TooManyRequestsException))
        .execute
    end

    # Either reorder or replace items in a playlist depending on the request's
    # parameters.
    # To reorder items, include `range_start`, `insert_before`, `range_length`
    # and `snapshot_id` in the request's body.
    # To replace items, include `uris` as either a query parameter or in the
    # request's body.
    # Replacing items in a playlist will overwrite its existing items. This
    # operation can be used for replacing or clearing items in a playlist.
    # <br/>
    # **Note**: Replace and reorder are mutually exclusive operations which
    # share the same endpoint, but have different parameters.
    # These operations can't be applied together in a single request.
    # @param [String] playlist_id Required parameter: Example:
    # @param [String] uris Optional parameter: Example:
    # @param [PlaylistsTracksRequest1] body Optional parameter: Example:
    # @return [PlaylistSnapshotId] response from the API call.
    def reorder_or_replace_playlists_tracks(playlist_id,
                                            uris: nil,
                                            body: nil)
      new_api_call_builder
        .request(new_request_builder(HttpMethodEnum::PUT,
                                     '/playlists/{playlist_id}/tracks',
                                     Server::DEFAULT)
                   .template_param(new_parameter(playlist_id, key: 'playlist_id')
                                    .should_encode(true))
                   .header_param(new_parameter('application/json', key: 'Content-Type'))
                   .query_param(new_parameter(uris, key: 'uris'))
                   .body_param(new_parameter(body))
                   .header_param(new_parameter('application/json', key: 'accept'))
                   .body_serializer(proc do |param| param.to_json unless param.nil? end)
                   .auth(Single.new('oauth_2_0')))
        .response(new_response_handler
                    .deserializer(APIHelper.method(:custom_type_deserializer))
                    .deserialize_into(PlaylistSnapshotId.method(:from_hash))
                    .local_error('401',
                                 "Bad or expired token. This can happen if the user revoked a'\
                                  ' token or\nthe access token has expired. You should'\
                                  ' re-authenticate the user.\n",
                                 UnauthorizedException)
                    .local_error('403',
                                 "Bad OAuth request (wrong consumer key, bad nonce, expired'\
                                  '\ntimestamp...). Unfortunately, re-authenticating the user'\
                                  ' won't help here.\n",
                                 ForbiddenException)
                    .local_error('429',
                                 "The app has exceeded its rate limits.\n",
                                 TooManyRequestsException))
        .execute
    end

    # Remove one or more items from a user's playlist.
    # @param [String] playlist_id Required parameter: Example:
    # @param [PlaylistsTracksRequest2] body Optional parameter: Example:
    # @return [PlaylistSnapshotId] response from the API call.
    def remove_tracks_playlist(playlist_id,
                               body: nil)
      new_api_call_builder
        .request(new_request_builder(HttpMethodEnum::DELETE,
                                     '/playlists/{playlist_id}/tracks',
                                     Server::DEFAULT)
                   .template_param(new_parameter(playlist_id, key: 'playlist_id')
                                    .should_encode(true))
                   .header_param(new_parameter('application/json', key: 'Content-Type'))
                   .body_param(new_parameter(body))
                   .header_param(new_parameter('application/json', key: 'accept'))
                   .body_serializer(proc do |param| param.to_json unless param.nil? end)
                   .auth(Single.new('oauth_2_0')))
        .response(new_response_handler
                    .deserializer(APIHelper.method(:custom_type_deserializer))
                    .deserialize_into(PlaylistSnapshotId.method(:from_hash))
                    .local_error('401',
                                 "Bad or expired token. This can happen if the user revoked a'\
                                  ' token or\nthe access token has expired. You should'\
                                  ' re-authenticate the user.\n",
                                 UnauthorizedException)
                    .local_error('403',
                                 "Bad OAuth request (wrong consumer key, bad nonce, expired'\
                                  '\ntimestamp...). Unfortunately, re-authenticating the user'\
                                  ' won't help here.\n",
                                 ForbiddenException)
                    .local_error('429',
                                 "The app has exceeded its rate limits.\n",
                                 TooManyRequestsException))
        .execute
    end

    # Get a list of the playlists owned or followed by the current Spotify
    # user.
    # @param [Integer] limit Optional parameter: Example:20
    # @param [Integer] offset Optional parameter: Example:0
    # @return [PagingPlaylistObject] response from the API call.
    def get_a_list_of_current_users_playlists(limit: 20,
                                              offset: 0)
      new_api_call_builder
        .request(new_request_builder(HttpMethodEnum::GET,
                                     '/me/playlists',
                                     Server::DEFAULT)
                   .query_param(new_parameter(limit, key: 'limit'))
                   .query_param(new_parameter(offset, key: 'offset'))
                   .header_param(new_parameter('application/json', key: 'accept'))
                   .auth(Single.new('oauth_2_0')))
        .response(new_response_handler
                    .deserializer(APIHelper.method(:custom_type_deserializer))
                    .deserialize_into(PagingPlaylistObject.method(:from_hash))
                    .local_error('401',
                                 "Bad or expired token. This can happen if the user revoked a'\
                                  ' token or\nthe access token has expired. You should'\
                                  ' re-authenticate the user.\n",
                                 UnauthorizedException)
                    .local_error('403',
                                 "Bad OAuth request (wrong consumer key, bad nonce, expired'\
                                  '\ntimestamp...). Unfortunately, re-authenticating the user'\
                                  ' won't help here.\n",
                                 ForbiddenException)
                    .local_error('429',
                                 "The app has exceeded its rate limits.\n",
                                 TooManyRequestsException))
        .execute
    end

    # Get a list of the playlists owned or followed by a Spotify user.
    # @param [String] user_id Required parameter: Example:
    # @param [Integer] limit Optional parameter: Example:20
    # @param [Integer] offset Optional parameter: Example:0
    # @return [PagingPlaylistObject] response from the API call.
    def get_list_users_playlists(user_id,
                                 limit: 20,
                                 offset: 0)
      new_api_call_builder
        .request(new_request_builder(HttpMethodEnum::GET,
                                     '/users/{user_id}/playlists',
                                     Server::DEFAULT)
                   .template_param(new_parameter(user_id, key: 'user_id')
                                    .should_encode(true))
                   .query_param(new_parameter(limit, key: 'limit'))
                   .query_param(new_parameter(offset, key: 'offset'))
                   .header_param(new_parameter('application/json', key: 'accept'))
                   .auth(Single.new('oauth_2_0')))
        .response(new_response_handler
                    .deserializer(APIHelper.method(:custom_type_deserializer))
                    .deserialize_into(PagingPlaylistObject.method(:from_hash))
                    .local_error('401',
                                 "Bad or expired token. This can happen if the user revoked a'\
                                  ' token or\nthe access token has expired. You should'\
                                  ' re-authenticate the user.\n",
                                 UnauthorizedException)
                    .local_error('403',
                                 "Bad OAuth request (wrong consumer key, bad nonce, expired'\
                                  '\ntimestamp...). Unfortunately, re-authenticating the user'\
                                  ' won't help here.\n",
                                 ForbiddenException)
                    .local_error('429',
                                 "The app has exceeded its rate limits.\n",
                                 TooManyRequestsException))
        .execute
    end

    # Create a playlist for a Spotify user. (The playlist will be empty until
    # you [add
    # tracks](/documentation/web-api/reference/add-tracks-to-playlist).)
    # Each user is generally limited to a maximum of 11000 playlists.
    # @param [String] user_id Required parameter: Example:
    # @param [UsersPlaylistsRequest] body Optional parameter: Example:
    # @return [PlaylistObject] response from the API call.
    def create_playlist(user_id,
                        body: nil)
      new_api_call_builder
        .request(new_request_builder(HttpMethodEnum::POST,
                                     '/users/{user_id}/playlists',
                                     Server::DEFAULT)
                   .template_param(new_parameter(user_id, key: 'user_id')
                                    .should_encode(true))
                   .header_param(new_parameter('application/json', key: 'Content-Type'))
                   .body_param(new_parameter(body))
                   .header_param(new_parameter('application/json', key: 'accept'))
                   .body_serializer(proc do |param| param.to_json unless param.nil? end)
                   .auth(Single.new('oauth_2_0')))
        .response(new_response_handler
                    .deserializer(APIHelper.method(:custom_type_deserializer))
                    .deserialize_into(PlaylistObject.method(:from_hash))
                    .local_error('401',
                                 "Bad or expired token. This can happen if the user revoked a'\
                                  ' token or\nthe access token has expired. You should'\
                                  ' re-authenticate the user.\n",
                                 UnauthorizedException)
                    .local_error('403',
                                 "Bad OAuth request (wrong consumer key, bad nonce, expired'\
                                  '\ntimestamp...). Unfortunately, re-authenticating the user'\
                                  ' won't help here.\n",
                                 ForbiddenException)
                    .local_error('429',
                                 "The app has exceeded its rate limits.\n",
                                 TooManyRequestsException))
        .execute
    end

    # Get a list of Spotify featured playlists (shown, for example, on a Spotify
    # player's 'Browse' tab).
    # @param [String] locale Optional parameter: Example:
    # @param [Integer] limit Optional parameter: Example:20
    # @param [Integer] offset Optional parameter: Example:0
    # @return [PagingFeaturedPlaylistObject] response from the API call.
    def get_featured_playlists(locale: nil,
                               limit: 20,
                               offset: 0)
      new_api_call_builder
        .request(new_request_builder(HttpMethodEnum::GET,
                                     '/browse/featured-playlists',
                                     Server::DEFAULT)
                   .query_param(new_parameter(locale, key: 'locale'))
                   .query_param(new_parameter(limit, key: 'limit'))
                   .query_param(new_parameter(offset, key: 'offset'))
                   .header_param(new_parameter('application/json', key: 'accept'))
                   .auth(Single.new('oauth_2_0')))
        .response(new_response_handler
                    .deserializer(APIHelper.method(:custom_type_deserializer))
                    .deserialize_into(PagingFeaturedPlaylistObject.method(:from_hash))
                    .local_error('401',
                                 "Bad or expired token. This can happen if the user revoked a'\
                                  ' token or\nthe access token has expired. You should'\
                                  ' re-authenticate the user.\n",
                                 UnauthorizedException)
                    .local_error('403',
                                 "Bad OAuth request (wrong consumer key, bad nonce, expired'\
                                  '\ntimestamp...). Unfortunately, re-authenticating the user'\
                                  ' won't help here.\n",
                                 ForbiddenException)
                    .local_error('429',
                                 "The app has exceeded its rate limits.\n",
                                 TooManyRequestsException))
        .execute
    end

    # Get a list of Spotify playlists tagged with a particular category.
    # @param [String] category_id Required parameter: Example:
    # @param [Integer] limit Optional parameter: Example:20
    # @param [Integer] offset Optional parameter: Example:0
    # @return [PagingFeaturedPlaylistObject] response from the API call.
    def get_a_categories_playlists(category_id,
                                   limit: 20,
                                   offset: 0)
      new_api_call_builder
        .request(new_request_builder(HttpMethodEnum::GET,
                                     '/browse/categories/{category_id}/playlists',
                                     Server::DEFAULT)
                   .template_param(new_parameter(category_id, key: 'category_id')
                                    .should_encode(true))
                   .query_param(new_parameter(limit, key: 'limit'))
                   .query_param(new_parameter(offset, key: 'offset'))
                   .header_param(new_parameter('application/json', key: 'accept'))
                   .auth(Single.new('oauth_2_0')))
        .response(new_response_handler
                    .deserializer(APIHelper.method(:custom_type_deserializer))
                    .deserialize_into(PagingFeaturedPlaylistObject.method(:from_hash))
                    .local_error('401',
                                 "Bad or expired token. This can happen if the user revoked a'\
                                  ' token or\nthe access token has expired. You should'\
                                  ' re-authenticate the user.\n",
                                 UnauthorizedException)
                    .local_error('403',
                                 "Bad OAuth request (wrong consumer key, bad nonce, expired'\
                                  '\ntimestamp...). Unfortunately, re-authenticating the user'\
                                  ' won't help here.\n",
                                 ForbiddenException)
                    .local_error('429',
                                 "The app has exceeded its rate limits.\n",
                                 TooManyRequestsException))
        .execute
    end

    # Get the current image associated with a specific playlist.
    # @param [String] playlist_id Required parameter: Example:
    # @return [Array[ImageObject]] response from the API call.
    def get_playlist_cover(playlist_id)
      new_api_call_builder
        .request(new_request_builder(HttpMethodEnum::GET,
                                     '/playlists/{playlist_id}/images',
                                     Server::DEFAULT)
                   .template_param(new_parameter(playlist_id, key: 'playlist_id')
                                    .should_encode(true))
                   .header_param(new_parameter('application/json', key: 'accept'))
                   .auth(Single.new('oauth_2_0')))
        .response(new_response_handler
                    .deserializer(APIHelper.method(:custom_type_deserializer))
                    .deserialize_into(ImageObject.method(:from_hash))
                    .is_response_array(true)
                    .local_error('401',
                                 "Bad or expired token. This can happen if the user revoked a'\
                                  ' token or\nthe access token has expired. You should'\
                                  ' re-authenticate the user.\n",
                                 UnauthorizedException)
                    .local_error('403',
                                 "Bad OAuth request (wrong consumer key, bad nonce, expired'\
                                  '\ntimestamp...). Unfortunately, re-authenticating the user'\
                                  ' won't help here.\n",
                                 ForbiddenException)
                    .local_error('429',
                                 "The app has exceeded its rate limits.\n",
                                 TooManyRequestsException))
        .execute
    end

    # Replace the image used to represent a specific playlist.
    # @param [String] playlist_id Required parameter: Example:
    # @param [Object] body Required parameter: Example:
    # @return [void] response from the API call.
    def upload_custom_playlist_cover(playlist_id,
                                     body)
      new_api_call_builder
        .request(new_request_builder(HttpMethodEnum::PUT,
                                     '/playlists/{playlist_id}/images',
                                     Server::DEFAULT)
                   .template_param(new_parameter(playlist_id, key: 'playlist_id')
                                    .should_encode(true))
                   .body_param(new_parameter(body))
                   .header_param(new_parameter('application/json; charset=utf-8', key: 'content-type'))
                   .body_serializer(APIHelper.method(:json_serialize))
                   .auth(Single.new('oauth_2_0')))
        .response(new_response_handler
                    .is_response_void(true)
                    .local_error('401',
                                 "Bad or expired token. This can happen if the user revoked a'\
                                  ' token or\nthe access token has expired. You should'\
                                  ' re-authenticate the user.\n",
                                 UnauthorizedException)
                    .local_error('403',
                                 "Bad OAuth request (wrong consumer key, bad nonce, expired'\
                                  '\ntimestamp...). Unfortunately, re-authenticating the user'\
                                  ' won't help here.\n",
                                 ForbiddenException)
                    .local_error('429',
                                 "The app has exceeded its rate limits.\n",
                                 TooManyRequestsException))
        .execute
    end
  end
end
