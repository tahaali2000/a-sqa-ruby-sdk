# spotify_web_api_with_fixes_and_improvements_from_sonallux
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module SpotifyWebApiWithFixesAndImprovementsFromSonallux
  # SearchController
  class SearchController < BaseController
    # Get Spotify catalog information about albums, artists, playlists, tracks,
    # shows, episodes or audiobooks
    # that match a keyword string. Audiobooks are only available within the US,
    # UK, Canada, Ireland, New Zealand and Australia markets.
    # @param [String] q Required parameter: Example:
    # @param [Array[ItemTypeEnum]] type Required parameter: Example:
    # @param [String] market Optional parameter: Example:
    # @param [Integer] limit Optional parameter: Example:20
    # @param [Integer] offset Optional parameter: Example:0
    # @param [IncludeExternalEnum] include_external Optional parameter:
    # Example:
    # @return [SearchItems] response from the API call.
    def search(q,
               type,
               market: nil,
               limit: 20,
               offset: 0,
               include_external: nil)
      new_api_call_builder
        .request(new_request_builder(HttpMethodEnum::GET,
                                     '/search',
                                     Server::DEFAULT)
                   .query_param(new_parameter(q, key: 'q'))
                   .query_param(new_parameter(type, key: 'type'))
                   .query_param(new_parameter(market, key: 'market'))
                   .query_param(new_parameter(limit, key: 'limit'))
                   .query_param(new_parameter(offset, key: 'offset'))
                   .query_param(new_parameter(include_external, key: 'include_external'))
                   .header_param(new_parameter('application/json', key: 'accept'))
                   .auth(Single.new('oauth_2_0')))
        .response(new_response_handler
                    .deserializer(APIHelper.method(:custom_type_deserializer))
                    .deserialize_into(SearchItems.method(:from_hash))
                    .local_error('401',
                                 "Bad or expired token. This can happen if the user revoked a'\
                                  ' token or\nthe access token has expired. You should'\
                                  ' re-authenticate the user.\n",
                                 UnauthorizedException)
                    .local_error('403',
                                 "Bad OAuth request (wrong consumer key, bad nonce, expired'\
                                  '\ntimestamp...). Unfortunately, re-authenticating the user'\
                                  ' won't help here.\n",
                                 ForbiddenException)
                    .local_error('429',
                                 "The app has exceeded its rate limits.\n",
                                 TooManyRequestsException))
        .execute
    end
  end
end
