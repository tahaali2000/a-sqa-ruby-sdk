# spotify_web_api_with_fixes_and_improvements_from_sonallux
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module SpotifyWebApiWithFixesAndImprovementsFromSonallux
  # AudiobooksController
  class AudiobooksController < BaseController
    # Get Spotify catalog information for a single audiobook. Audiobooks are
    # only available within the US, UK, Canada, Ireland, New Zealand and
    # Australia markets.
    # @param [String] id Required parameter: Example:
    # @param [String] market Optional parameter: Example:
    # @return [AudiobookObject] response from the API call.
    def get_an_audiobook(id,
                         market: nil)
      new_api_call_builder
        .request(new_request_builder(HttpMethodEnum::GET,
                                     '/audiobooks/{id}',
                                     Server::DEFAULT)
                   .template_param(new_parameter(id, key: 'id')
                                    .should_encode(true))
                   .query_param(new_parameter(market, key: 'market'))
                   .header_param(new_parameter('application/json', key: 'accept'))
                   .auth(Single.new('oauth_2_0')))
        .response(new_response_handler
                    .deserializer(APIHelper.method(:custom_type_deserializer))
                    .deserialize_into(AudiobookObject.method(:from_hash))
                    .local_error('400',
                                 "The request contains malformed data in path, query parameters,'\
                                  ' or body.\n",
                                 BadRequestException)
                    .local_error('401',
                                 "Bad or expired token. This can happen if the user revoked a'\
                                  ' token or\nthe access token has expired. You should'\
                                  ' re-authenticate the user.\n",
                                 UnauthorizedException)
                    .local_error('403',
                                 "Bad OAuth request (wrong consumer key, bad nonce, expired'\
                                  '\ntimestamp...). Unfortunately, re-authenticating the user'\
                                  ' won't help here.\n",
                                 ForbiddenException)
                    .local_error('404',
                                 "The requested resource cannot be found.\n",
                                 NotFoundException)
                    .local_error('429',
                                 "The app has exceeded its rate limits.\n",
                                 TooManyRequestsException))
        .execute
    end

    # Get Spotify catalog information for several audiobooks identified by their
    # Spotify IDs. Audiobooks are only available within the US, UK, Canada,
    # Ireland, New Zealand and Australia markets.
    # @param [String] ids Required parameter: Example:
    # @param [String] market Optional parameter: Example:
    # @return [ManyAudiobooks] response from the API call.
    def get_multiple_audiobooks(ids,
                                market: nil)
      new_api_call_builder
        .request(new_request_builder(HttpMethodEnum::GET,
                                     '/audiobooks',
                                     Server::DEFAULT)
                   .query_param(new_parameter(ids, key: 'ids'))
                   .query_param(new_parameter(market, key: 'market'))
                   .header_param(new_parameter('application/json', key: 'accept'))
                   .auth(Single.new('oauth_2_0')))
        .response(new_response_handler
                    .deserializer(APIHelper.method(:custom_type_deserializer))
                    .deserialize_into(ManyAudiobooks.method(:from_hash))
                    .local_error('401',
                                 "Bad or expired token. This can happen if the user revoked a'\
                                  ' token or\nthe access token has expired. You should'\
                                  ' re-authenticate the user.\n",
                                 UnauthorizedException)
                    .local_error('403',
                                 "Bad OAuth request (wrong consumer key, bad nonce, expired'\
                                  '\ntimestamp...). Unfortunately, re-authenticating the user'\
                                  ' won't help here.\n",
                                 ForbiddenException)
                    .local_error('429',
                                 "The app has exceeded its rate limits.\n",
                                 TooManyRequestsException))
        .execute
    end

    # Get Spotify catalog information about an audiobook's chapters. Audiobooks
    # are only available within the US, UK, Canada, Ireland, New Zealand and
    # Australia markets.
    # @param [String] id Required parameter: Example:
    # @param [String] market Optional parameter: Example:
    # @param [Integer] limit Optional parameter: Example:20
    # @param [Integer] offset Optional parameter: Example:0
    # @return [PagingSimplifiedChapterObject] response from the API call.
    def get_audiobook_chapters(id,
                               market: nil,
                               limit: 20,
                               offset: 0)
      new_api_call_builder
        .request(new_request_builder(HttpMethodEnum::GET,
                                     '/audiobooks/{id}/chapters',
                                     Server::DEFAULT)
                   .template_param(new_parameter(id, key: 'id')
                                    .should_encode(true))
                   .query_param(new_parameter(market, key: 'market'))
                   .query_param(new_parameter(limit, key: 'limit'))
                   .query_param(new_parameter(offset, key: 'offset'))
                   .header_param(new_parameter('application/json', key: 'accept'))
                   .auth(Single.new('oauth_2_0')))
        .response(new_response_handler
                    .deserializer(APIHelper.method(:custom_type_deserializer))
                    .deserialize_into(PagingSimplifiedChapterObject.method(:from_hash))
                    .local_error('401',
                                 "Bad or expired token. This can happen if the user revoked a'\
                                  ' token or\nthe access token has expired. You should'\
                                  ' re-authenticate the user.\n",
                                 UnauthorizedException)
                    .local_error('403',
                                 "Bad OAuth request (wrong consumer key, bad nonce, expired'\
                                  '\ntimestamp...). Unfortunately, re-authenticating the user'\
                                  ' won't help here.\n",
                                 ForbiddenException)
                    .local_error('429',
                                 "The app has exceeded its rate limits.\n",
                                 TooManyRequestsException))
        .execute
    end

    # Get a list of the audiobooks saved in the current Spotify user's 'Your
    # Music' library.
    # @param [Integer] limit Optional parameter: Example:20
    # @param [Integer] offset Optional parameter: Example:0
    # @return [PagingSavedAudiobookObject] response from the API call.
    def get_users_saved_audiobooks(limit: 20,
                                   offset: 0)
      new_api_call_builder
        .request(new_request_builder(HttpMethodEnum::GET,
                                     '/me/audiobooks',
                                     Server::DEFAULT)
                   .query_param(new_parameter(limit, key: 'limit'))
                   .query_param(new_parameter(offset, key: 'offset'))
                   .header_param(new_parameter('application/json', key: 'accept'))
                   .auth(Single.new('oauth_2_0')))
        .response(new_response_handler
                    .deserializer(APIHelper.method(:custom_type_deserializer))
                    .deserialize_into(PagingSavedAudiobookObject.method(:from_hash))
                    .local_error('401',
                                 "Bad or expired token. This can happen if the user revoked a'\
                                  ' token or\nthe access token has expired. You should'\
                                  ' re-authenticate the user.\n",
                                 UnauthorizedException)
                    .local_error('403',
                                 "Bad OAuth request (wrong consumer key, bad nonce, expired'\
                                  '\ntimestamp...). Unfortunately, re-authenticating the user'\
                                  ' won't help here.\n",
                                 ForbiddenException)
                    .local_error('429',
                                 "The app has exceeded its rate limits.\n",
                                 TooManyRequestsException))
        .execute
    end

    # Save one or more audiobooks to the current Spotify user's library.
    # @param [String] ids Required parameter: Example:
    # @return [void] response from the API call.
    def save_audiobooks_user(ids)
      new_api_call_builder
        .request(new_request_builder(HttpMethodEnum::PUT,
                                     '/me/audiobooks',
                                     Server::DEFAULT)
                   .query_param(new_parameter(ids, key: 'ids'))
                   .auth(Single.new('oauth_2_0')))
        .response(new_response_handler
                    .is_response_void(true)
                    .local_error('401',
                                 "Bad or expired token. This can happen if the user revoked a'\
                                  ' token or\nthe access token has expired. You should'\
                                  ' re-authenticate the user.\n",
                                 UnauthorizedException)
                    .local_error('403',
                                 "Bad OAuth request (wrong consumer key, bad nonce, expired'\
                                  '\ntimestamp...). Unfortunately, re-authenticating the user'\
                                  ' won't help here.\n",
                                 ForbiddenException)
                    .local_error('429',
                                 "The app has exceeded its rate limits.\n",
                                 TooManyRequestsException))
        .execute
    end

    # Remove one or more audiobooks from the Spotify user's library.
    # @param [String] ids Required parameter: Example:
    # @return [void] response from the API call.
    def remove_audiobooks_user(ids)
      new_api_call_builder
        .request(new_request_builder(HttpMethodEnum::DELETE,
                                     '/me/audiobooks',
                                     Server::DEFAULT)
                   .query_param(new_parameter(ids, key: 'ids'))
                   .auth(Single.new('oauth_2_0')))
        .response(new_response_handler
                    .is_response_void(true)
                    .local_error('401',
                                 "Bad or expired token. This can happen if the user revoked a'\
                                  ' token or\nthe access token has expired. You should'\
                                  ' re-authenticate the user.\n",
                                 UnauthorizedException)
                    .local_error('403',
                                 "Bad OAuth request (wrong consumer key, bad nonce, expired'\
                                  '\ntimestamp...). Unfortunately, re-authenticating the user'\
                                  ' won't help here.\n",
                                 ForbiddenException)
                    .local_error('429',
                                 "The app has exceeded its rate limits.\n",
                                 TooManyRequestsException))
        .execute
    end

    # Check if one or more audiobooks are already saved in the current Spotify
    # user's library.
    # @param [String] ids Required parameter: Example:
    # @return [Array[TrueClass | FalseClass]] response from the API call.
    def check_users_saved_audiobooks(ids)
      new_api_call_builder
        .request(new_request_builder(HttpMethodEnum::GET,
                                     '/me/audiobooks/contains',
                                     Server::DEFAULT)
                   .query_param(new_parameter(ids, key: 'ids'))
                   .header_param(new_parameter('application/json', key: 'accept'))
                   .auth(Single.new('oauth_2_0')))
        .response(new_response_handler
                    .deserializer(APIHelper.method(:deserialize_primitive_types))
                    .is_response_array(true)
                    .is_primitive_response(true)
                    .local_error('401',
                                 "Bad or expired token. This can happen if the user revoked a'\
                                  ' token or\nthe access token has expired. You should'\
                                  ' re-authenticate the user.\n",
                                 UnauthorizedException)
                    .local_error('403',
                                 "Bad OAuth request (wrong consumer key, bad nonce, expired'\
                                  '\ntimestamp...). Unfortunately, re-authenticating the user'\
                                  ' won't help here.\n",
                                 ForbiddenException)
                    .local_error('429',
                                 "The app has exceeded its rate limits.\n",
                                 TooManyRequestsException))
        .execute
    end
  end
end
