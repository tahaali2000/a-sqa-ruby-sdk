# spotify_web_api_with_fixes_and_improvements_from_sonallux
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module SpotifyWebApiWithFixesAndImprovementsFromSonallux
  # PlaylistsTracksRequest1 Model.
  class PlaylistsTracksRequest1 < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # TODO: Write general description for this method
    # @return [Array[String]]
    attr_accessor :uris

    # The position of the first item to be reordered.
    # @return [Integer]
    attr_accessor :range_start

    # The position where the items should be inserted.<br/>To reorder the items
    # to the end of the playlist, simply set _insert_before_ to the position
    # after the last item.<br/>Examples:<br/>To reorder the first item to the
    # last position in a playlist with 10 items, set _range_start_ to 0, and
    # _insert_before_ to 10.<br/>To reorder the last item in a playlist with 10
    # items to the start of the playlist, set _range_start_ to 9, and
    # _insert_before_ to 0.
    # @return [Integer]
    attr_accessor :insert_before

    # The amount of items to be reordered. Defaults to 1 if not set.<br/>The
    # range of items to be reordered begins from the _range_start_ position, and
    # includes the _range_length_ subsequent items.<br/>Example:<br/>To move the
    # items at index 9-10 to the start of the playlist, _range_start_ is set to
    # 9, and _range_length_ is set to 2.
    # @return [Integer]
    attr_accessor :range_length

    # The playlist's snapshot ID against which you want to make the changes.
    # @return [String]
    attr_accessor :snapshot_id

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['uris'] = 'uris'
      @_hash['range_start'] = 'range_start'
      @_hash['insert_before'] = 'insert_before'
      @_hash['range_length'] = 'range_length'
      @_hash['snapshot_id'] = 'snapshot_id'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        uris
        range_start
        insert_before
        range_length
        snapshot_id
      ]
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(uris = SKIP, range_start = SKIP, insert_before = SKIP,
                   range_length = SKIP, snapshot_id = SKIP)
      @uris = uris unless uris == SKIP
      @range_start = range_start unless range_start == SKIP
      @insert_before = insert_before unless insert_before == SKIP
      @range_length = range_length unless range_length == SKIP
      @snapshot_id = snapshot_id unless snapshot_id == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      uris = hash.key?('uris') ? hash['uris'] : SKIP
      range_start = hash.key?('range_start') ? hash['range_start'] : SKIP
      insert_before = hash.key?('insert_before') ? hash['insert_before'] : SKIP
      range_length = hash.key?('range_length') ? hash['range_length'] : SKIP
      snapshot_id = hash.key?('snapshot_id') ? hash['snapshot_id'] : SKIP

      # Create object from extracted values.
      PlaylistsTracksRequest1.new(uris,
                                  range_start,
                                  insert_before,
                                  range_length,
                                  snapshot_id)
    end

    # Provides a human-readable string representation of the object.
    def to_s
      class_name = self.class.name.split('::').last
      "<#{class_name} uris: #{@uris}, range_start: #{@range_start}, insert_before:"\
      " #{@insert_before}, range_length: #{@range_length}, snapshot_id: #{@snapshot_id}>"
    end

    # Provides a debugging-friendly string with detailed object information.
    def inspect
      class_name = self.class.name.split('::').last
      "<#{class_name} uris: #{@uris.inspect}, range_start: #{@range_start.inspect},"\
      " insert_before: #{@insert_before.inspect}, range_length: #{@range_length.inspect},"\
      " snapshot_id: #{@snapshot_id.inspect}>"
    end
  end
end
