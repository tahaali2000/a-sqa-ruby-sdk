# spotify_web_api_with_fixes_and_improvements_from_sonallux
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module SpotifyWebApiWithFixesAndImprovementsFromSonallux
  # MeEpisodesRequest1 Model.
  class MeEpisodesRequest1 < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # A JSON array of the [Spotify
    # IDs](/documentation/web-api/concepts/spotify-uris-ids). <br/>A maximum of
    # 50 items can be specified in one request. _**Note**: if the `ids`
    # parameter is present in the query string, any IDs listed here in the body
    # will be ignored._
    # @return [Array[String]]
    attr_accessor :ids

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['ids'] = 'ids'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        ids
      ]
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(ids = SKIP)
      @ids = ids unless ids == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      ids = hash.key?('ids') ? hash['ids'] : SKIP

      # Create object from extracted values.
      MeEpisodesRequest1.new(ids)
    end

    # Provides a human-readable string representation of the object.
    def to_s
      class_name = self.class.name.split('::').last
      "<#{class_name} ids: #{@ids}>"
    end

    # Provides a debugging-friendly string with detailed object information.
    def inspect
      class_name = self.class.name.split('::').last
      "<#{class_name} ids: #{@ids.inspect}>"
    end
  end
end
