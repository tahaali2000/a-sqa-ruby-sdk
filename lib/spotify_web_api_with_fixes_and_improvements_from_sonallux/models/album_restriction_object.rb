# spotify_web_api_with_fixes_and_improvements_from_sonallux
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module SpotifyWebApiWithFixesAndImprovementsFromSonallux
  # AlbumRestrictionObject Model.
  class AlbumRestrictionObject < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # The reason for the restriction. Albums may be restricted if the content is
    # not available in a given market, to the user's subscription type, or when
    # the user's account is set to not play explicit content.
    # Additional reasons may be added in the future.
    # @return [ReasonEnum]
    attr_accessor :reason

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['reason'] = 'reason'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        reason
      ]
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(reason = SKIP)
      @reason = reason unless reason == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      reason = hash.key?('reason') ? hash['reason'] : SKIP

      # Create object from extracted values.
      AlbumRestrictionObject.new(reason)
    end

    # Validates an instance of the object from a given value.
    # @param [AlbumRestrictionObject | Hash] The value against the validation is performed.
    def self.validate(value)
      return true if value.instance_of? self

      return false unless value.instance_of? Hash

      true
    end

    # Provides a human-readable string representation of the object.
    def to_s
      class_name = self.class.name.split('::').last
      "<#{class_name} reason: #{@reason}>"
    end

    # Provides a debugging-friendly string with detailed object information.
    def inspect
      class_name = self.class.name.split('::').last
      "<#{class_name} reason: #{@reason.inspect}>"
    end
  end
end
