# spotify_web_api_with_fixes_and_improvements_from_sonallux
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module SpotifyWebApiWithFixesAndImprovementsFromSonallux
  # PlaylistTracksRefObject Model.
  class PlaylistTracksRefObject < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # A link to the Web API endpoint where full details of the playlist's tracks
    # can be retrieved.
    # @return [String]
    attr_accessor :href

    # Number of tracks in the playlist.
    # @return [Integer]
    attr_accessor :total

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['href'] = 'href'
      @_hash['total'] = 'total'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        href
        total
      ]
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(href = SKIP, total = SKIP)
      @href = href unless href == SKIP
      @total = total unless total == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      href = hash.key?('href') ? hash['href'] : SKIP
      total = hash.key?('total') ? hash['total'] : SKIP

      # Create object from extracted values.
      PlaylistTracksRefObject.new(href,
                                  total)
    end

    # Provides a human-readable string representation of the object.
    def to_s
      class_name = self.class.name.split('::').last
      "<#{class_name} href: #{@href}, total: #{@total}>"
    end

    # Provides a debugging-friendly string with detailed object information.
    def inspect
      class_name = self.class.name.split('::').last
      "<#{class_name} href: #{@href.inspect}, total: #{@total.inspect}>"
    end
  end
end
