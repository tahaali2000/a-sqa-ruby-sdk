# spotify_web_api_with_fixes_and_improvements_from_sonallux
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module SpotifyWebApiWithFixesAndImprovementsFromSonallux
  # ManyChapters Model.
  class ManyChapters < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # TODO: Write general description for this method
    # @return [Array[ChapterObject]]
    attr_accessor :chapters

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['chapters'] = 'chapters'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      []
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(chapters = nil)
      @chapters = chapters
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      # Parameter is an array, so we need to iterate through it
      chapters = nil
      unless hash['chapters'].nil?
        chapters = []
        hash['chapters'].each do |structure|
          chapters << (ChapterObject.from_hash(structure) if structure)
        end
      end

      chapters = nil unless hash.key?('chapters')

      # Create object from extracted values.
      ManyChapters.new(chapters)
    end

    # Provides a human-readable string representation of the object.
    def to_s
      class_name = self.class.name.split('::').last
      "<#{class_name} chapters: #{@chapters}>"
    end

    # Provides a debugging-friendly string with detailed object information.
    def inspect
      class_name = self.class.name.split('::').last
      "<#{class_name} chapters: #{@chapters.inspect}>"
    end
  end
end
