# spotify_web_api_with_fixes_and_improvements_from_sonallux
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

require_relative 'controller_test_base'

class ArtistsControllerTest < ControllerTestBase
  # Called only once for the class before any test has executed
  def setup
    setup_class
    @controller = @client.artists
    @response_catcher = @controller.http_call_back
  end

  # Get Spotify catalog information for a single artist identified by their unique Spotify ID.
  #
  def test_get_an_artist
    # Parameters for the API call
    id = '0TnOYISbd1XYRBk9myaseg'

    # Perform the API call through the SDK function
    result = @controller.get_an_artist(id)

    # Test response code
    assert_equal(200, @response_catcher.response.status_code)
    # Test headers
    expected_headers = {}
    expected_headers['content-type'] = 'application/json'

    assert(ComparisonHelper.match_headers(expected_headers, @response_catcher.response.headers))
  end

  # Get Spotify catalog information for several artists based on their Spotify IDs.
  #
  def test_get_multiple_artists
    # Parameters for the API call
    ids = '2CIMQHirSU0MQqyYHq0eOx,57dN52uHvrHOxijzpIgu3E,1vCWHaC5f2uS3yhpwWbIA6'

    # Perform the API call through the SDK function
    result = @controller.get_multiple_artists(ids)

    # Test response code
    assert_equal(200, @response_catcher.response.status_code)
    # Test headers
    expected_headers = {}
    expected_headers['content-type'] = 'application/json'

    assert(ComparisonHelper.match_headers(expected_headers, @response_catcher.response.headers))
  end

  # Get Spotify catalog information about an artist's albums.
  #
  def test_get_an_artists_albums
    # Parameters for the API call
    id = '0TnOYISbd1XYRBk9myaseg'
    include_groups = 'single,appears_on'
    market = 'ES'
    limit = 20
    offset = 0

    # Perform the API call through the SDK function
    result = @controller.get_an_artists_albums(id,
                                               include_groups: include_groups,
                                               market: market, limit: limit,
                                               offset: offset)

    # Test response code
    assert_equal(200, @response_catcher.response.status_code)
    # Test headers
    expected_headers = {}
    expected_headers['content-type'] = 'application/json'

    assert(ComparisonHelper.match_headers(expected_headers, @response_catcher.response.headers))
  end

  # Get Spotify catalog information about an artist's top tracks by country.
  #
  def test_get_an_artists_top_tracks
    # Parameters for the API call
    id = '0TnOYISbd1XYRBk9myaseg'
    market = 'ES'

    # Perform the API call through the SDK function
    result = @controller.get_an_artists_top_tracks(id, market: market)

    # Test response code
    assert_equal(200, @response_catcher.response.status_code)
    # Test headers
    expected_headers = {}
    expected_headers['content-type'] = 'application/json'

    assert(ComparisonHelper.match_headers(expected_headers, @response_catcher.response.headers))
  end

  # Get Spotify catalog information about artists similar to a given artist. Similarity is based on analysis of the Spotify community's listening history.
  #
  def test_get_an_artists_related_artists
    # Parameters for the API call
    id = '0TnOYISbd1XYRBk9myaseg'

    # Perform the API call through the SDK function
    result = @controller.get_an_artists_related_artists(id)

    # Test response code
    assert_equal(200, @response_catcher.response.status_code)
    # Test headers
    expected_headers = {}
    expected_headers['content-type'] = 'application/json'

    assert(ComparisonHelper.match_headers(expected_headers, @response_catcher.response.headers))
  end

end