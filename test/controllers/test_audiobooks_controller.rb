# spotify_web_api_with_fixes_and_improvements_from_sonallux
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

require_relative 'controller_test_base'

class AudiobooksControllerTest < ControllerTestBase
  # Called only once for the class before any test has executed
  def setup
    setup_class
    @controller = @client.audiobooks
    @response_catcher = @controller.http_call_back
  end

  # Get Spotify catalog information for a single audiobook. Audiobooks are only available within the US, UK, Canada, Ireland, New Zealand and Australia markets.
  #
  def test_get_an_audiobook
    # Parameters for the API call
    id = '7iHfbu1YPACw6oZPAFJtqe'
    market = 'ES'

    # Perform the API call through the SDK function
    result = @controller.get_an_audiobook(id, market: market)

    # Test response code
    assert_equal(200, @response_catcher.response.status_code)
    # Test headers
    expected_headers = {}
    expected_headers['content-type'] = 'application/json'

    assert(ComparisonHelper.match_headers(expected_headers, @response_catcher.response.headers))
  end

  # Get Spotify catalog information for several audiobooks identified by their Spotify IDs. Audiobooks are only available within the US, UK, Canada, Ireland, New Zealand and Australia markets.
  #
  def test_get_multiple_audiobooks
    # Parameters for the API call
    ids = '18yVqkdbdRvS24c0Ilj2ci,1HGw3J3NxZO1TP1BTtVhpZ,7iHfbu1YPACw6oZPAFJtqe'
    market = 'ES'

    # Perform the API call through the SDK function
    result = @controller.get_multiple_audiobooks(ids, market: market)

    # Test response code
    assert_equal(200, @response_catcher.response.status_code)
    # Test headers
    expected_headers = {}
    expected_headers['content-type'] = 'application/json'

    assert(ComparisonHelper.match_headers(expected_headers, @response_catcher.response.headers))
  end

  # Get Spotify catalog information about an audiobook's chapters. Audiobooks are only available within the US, UK, Canada, Ireland, New Zealand and Australia markets.
  #
  def test_get_audiobook_chapters
    # Parameters for the API call
    id = '7iHfbu1YPACw6oZPAFJtqe'
    market = 'ES'
    limit = 20
    offset = 0

    # Perform the API call through the SDK function
    result = @controller.get_audiobook_chapters(id, market: market,
                                                limit: limit, offset: offset)

    # Test response code
    assert_equal(200, @response_catcher.response.status_code)
    # Test headers
    expected_headers = {}
    expected_headers['content-type'] = 'application/json'

    assert(ComparisonHelper.match_headers(expected_headers, @response_catcher.response.headers))
  end

  # Get a list of the audiobooks saved in the current Spotify user's 'Your Music' library.
  #
  def test_get_users_saved_audiobooks
    # Parameters for the API call
    limit = 20
    offset = 0

    # Perform the API call through the SDK function
    result = @controller.get_users_saved_audiobooks(limit: limit,
                                                    offset: offset)

    # Test response code
    assert_equal(200, @response_catcher.response.status_code)
    # Test headers
    expected_headers = {}
    expected_headers['content-type'] = 'application/json'

    assert(ComparisonHelper.match_headers(expected_headers, @response_catcher.response.headers))
  end

  # Save one or more audiobooks to the current Spotify user's library.
  #
  def test_save_audiobooks_user
    # Parameters for the API call
    ids = '18yVqkdbdRvS24c0Ilj2ci,1HGw3J3NxZO1TP1BTtVhpZ,7iHfbu1YPACw6oZPAFJtqe'

    # Perform the API call through the SDK function
    @controller.save_audiobooks_user(ids)

    # Test response code
    assert_equal(200, @response_catcher.response.status_code)
  end

  # Remove one or more audiobooks from the Spotify user's library.
  #
  def test_remove_audiobooks_user
    # Parameters for the API call
    ids = '18yVqkdbdRvS24c0Ilj2ci,1HGw3J3NxZO1TP1BTtVhpZ,7iHfbu1YPACw6oZPAFJtqe'

    # Perform the API call through the SDK function
    @controller.remove_audiobooks_user(ids)

    # Test response code
    assert_equal(200, @response_catcher.response.status_code)
  end

  # Check if one or more audiobooks are already saved in the current Spotify user's library.
  #
  def test_check_users_saved_audiobooks
    # Parameters for the API call
    ids = '18yVqkdbdRvS24c0Ilj2ci,1HGw3J3NxZO1TP1BTtVhpZ,7iHfbu1YPACw6oZPAFJtqe'

    # Perform the API call through the SDK function
    result = @controller.check_users_saved_audiobooks(ids)

    # Test response code
    assert_equal(200, @response_catcher.response.status_code)
    # Test headers
    expected_headers = {}
    expected_headers['content-type'] = 'application/json'

    assert(ComparisonHelper.match_headers(expected_headers, @response_catcher.response.headers))

    # Test whether the captured response is as we expected
    refute_nil(result)
    assert_equal("[\r\n  false,\r\n  true\r\n]", @response_catcher.response.raw_body)
  end

end